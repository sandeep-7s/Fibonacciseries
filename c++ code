// Fibonacci Series

#include <bits/stdc++.h>
using namespace std;
string isFibonacci(string s)
{

    int i = 0, arr[26] = {0}, j;
   while (s[i] != '\0') {
      if (s[i] >= 'a' && s[i] <= 'z') {
         j = s[i] - 'a';
         ++arr[j];
      }
      ++i;
   }
   
   vector<int> v;
   for(int i=0;i<26;i++)
   {
       if(arr[i]!=0)
       v.push_back(arr[i]);
   }

 if(v.size()<3)
return "Dynamic";

int j1=0,k=0,flag=0;
for(int i=0;i<v.size()-2;i++)
{
    j1=i+1;k=i+2;
    if(v[i]>v[j1]&&v[i]>v[k])
    {
        if(v[i]==v[j1]+v[k])
        {
            flag=1;
            break;
        }
    }
    else if(v[j1]>v[i]&&v[j1]>v[k])
    {
        if(v[j1]==v[i]+v[k])
        {
            flag=1;
            break;
        }
    }
    else if(v[k]>v[i]&&v[k]>v[j1])
    {
        if(v[k]==v[j1]+v[i])
        {
            flag=1;
            break;
        }
    }
}
if(flag==1)
return "Dynamic";
else
return "Not";
}

int main()
{
int t;
cin>>t;
while(t--)
{
string s;
cin>>s;


	cout << isFibonacci(s)<<endl; }

	return 0;
}
